数据类型：
   *基本数据类型
     -基本数据类型在变量中直接保存值，值与值之间是相互独立的，
       修改一个值不会影响另一个
       String
       Number
       Boolean
       Null
       Undefined
   *引用数据类型
      - 引用数据类型在 变量中是保存对象的内存地址（引用），
         如果两个变量指向的是同一个对象，则修改一个会影响另一个
        Object
   *检查值是什么数据类型？
        -使用typeof运算符来检查一个值的类型
        -typeof可能返回的结果：
           string  -字符串
           number  -数值
           boolean  -布尔值
           undefined -未定义
           object  -对象 或null
           function -函数
    *类型转换
       -转换为String
         -强制类型转换
           1.调用toString（）方法
               -不适用于null和undefined，会报错
               -当我们对基本数据类型的String，Number，Boolean调用方法或属性时，
                  JS解析器会临时使用包装类型将其转换为对象，然后调用对象的属性或方法，
                  调用完毕再将对象销毁
                -将基本数据类型转换为对象，称为装箱
                 将对象装换为基本数据类型，称为拆箱
            2.调用String（）函数
         -隐式类型转换
             +“”’
       -转换为Number
         -强制类型转换
            -调用Number()函数
            -专门用于对付字符串的
               parseInt（）
               parseFloat（）
            -隐式类型转换
              -使用一元的  +
       -转换为Boolean
          -强制类型转换
             -调用Boolean（）函数
             -转换的情况：
                 数字：
                    -除了0和NaN其余都是true
                 字符串：
                    -除了空字符串其余都是true
                 null和undefined都是false
                 对象默认情况下是true
           -隐式类型转换
             -使用  ！！
    *逻辑运算符
      && 与运算
         -与运算是找false，只要有一个false就返回false
           例  1 && 2  ； 0 && 2
         -如果第一个值是false，则返回第一个值，否则返回第二个值
         event = event || window.event；
         || 或运算
            -或运算是找true的，只要有一个true就返回true
            例  1 || 2  ； 0  ||2
            -如果第一个值是true，则返回第一个值，否则返回第二个值
    *相等与全等
       ==
         相等会做自动的类型转换
         -大部分情况下都是将不同的数据类型转换为Number，然后再比较
      ===
        不会自动类型转换
          例 1 == “1”  //true
             1 === “1”  //false
             “1” == true  //true
             “hello” === true  //false
             null == 0；
     
     
       
